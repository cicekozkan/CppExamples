				17 Ekim 2015 Cumartesi





///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
#include <vector>
#include <initializer_list>
#include <string>
#include <deque>
#include <algorithm>
#include "date.h"
#include "cupa.h"
#include <iostream>
#include <list>
#include <functional>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>

using namespace std;
using namespace std::placeholders;

void func(int x, int y, int z)
{
	cout << "x = " << x << endl;
	cout << "y = " << y << endl;
	cout << "z = " << z << endl;
	cout << sl;
}

int main()
{
	/*auto f1 = bind(func, 10, 20, 30);
	f1();
	auto f2 = bind(func, _1, 100, 200);
	f2(-5);
	auto f3 = bind(func, _1, 50, _2);
	f3(1, 2);*/
	auto f4 = bind(func, _3, _2, _1);
	f4(1, 2, 3);

	return 0;
}
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
#include <vector>
#include <initializer_list>
#include <string>
#include <deque>
#include <algorithm>
#include "date.h"
#include "cupa.h"
#include <iostream>
#include <list>
#include <functional>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>

using namespace std;

struct Veli {

	int operator()(int x)
	{
		return x + 10;
	}
};

int foo(int val)
{
	return val * val;
}

int main()
{
	function<int(int)> f(foo);

	cout << f(10) << endl;

	f = Veli();

	cout << f(20) << endl;

	f = [](int a) {return a * a * a;};

	cout << f(5) << endl;


	return 0;
}
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
#include <vector>
#include <initializer_list>
#include <string>
#include <deque>
#include <algorithm>
#include "date.h"
#include "cupa.h"
#include <iostream>
#include <list>
#include <functional>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>

using namespace std;

struct Veli {

	int operator()(int x)
	{
		return x + 10;
	}
};

int foo(int val)
{
	return val * val;
}

int main()
{
	map<string, function<int(int)>> mymap;

	mymap.insert(make_pair("func1", &foo));
	mymap.insert(make_pair("func2", Veli()));
	mymap.insert(make_pair("func3", [](int x) {return x * x - 1;}));

	cout << mymap["func2"](10) << endl;


	return 0;
}
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
#include <vector>
#include <initializer_list>
#include <string>
#include <deque>
#include <algorithm>
#include "date.h"
#include "cupa.h"
#include <iostream>
#include <list>
#include <functional>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>

using namespace std;


template<class T, class U>
auto func(T x, U y)->decltype(x + y)
{
	return x + y;
}


std::function<int(int)> func()
{
	auto f = [](int x) {return x;};
	///////
	return f;

}



int main()
{

	return 0;
}
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
#include <vector>
#include <initializer_list>
#include <string>
#include <deque>
#include <algorithm>
#include "date.h"
#include "cupa.h"
#include <iostream>
#include <list>
#include <functional>
#include <set>
#include <map>
#include <unordered_set>
#include <stack>

using namespace std;


int main()
{
	stack<string> ms;

	ms.push("ali");
	ms.push("veli");
	ms.push("selami");
	ms.push("hakan");
	ms.push("tuncer");

	while (!ms.empty()) {
		cout << ms.top() << endl;
		ms.pop();
		getchar();
	}

	return 0;
}
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
#include <vector>
#include <initializer_list>
#include <string>
#include <deque>
#include <algorithm>
#include "date.h"
#include "cupa.h"
#include <iostream>
#include <list>
#include <functional>
#include <set>
#include <map>
#include <unordered_set>
#include <stack>

using namespace std;

bool isPmatch(const string &r);

int main()
{
	cout << "bir yazi girin : ";
	string s;
	cin >> s;

	if (isPmatch(s))
		cout << "uydu..." << endl;
	else
		cout << "uymadi..." << endl;




	return 0;
}
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
#include <vector>
#include <initializer_list>
#include <string>
#include <deque>
#include <algorithm>
#include "date.h"
#include "cupa.h"
#include <iostream>
#include <list>
#include <functional>
#include <set>
#include <map>
#include <unordered_set>
#include <stack>

using namespace std;

bool isPmatch(const string &r);

class Mystack : public std::stack<int> {
public:
	void popend()
	{
		c.pop_back();
	}
};


int main()
{



	return 0;
}

